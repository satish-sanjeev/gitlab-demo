image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    - 'AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}' 
    - 'AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}' 
    - 'AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}'

variables:
  PLAN: plan.tfplan

cache:
  paths:
    # - .terraform

before_script:
  - cd customer2
  - terraform --version
  - terraform init
  - echo "this is the path:`pwd`"

stages:
  - validate
  - plan
  - apply

validate:
  stage: validate
  script:
    - terraform validate
  only:
    - branches

plan:
  stage: plan
  script:
    - cd customer2
    - terraform plan
    # - terraform plan -out plan.tfplan
    # - echo \`\`\`diff > plan.txt
    # - terraform show -no-color plan.tfplan | tee -a plan.txt
    # - echo \`\`\` >> plan.txt
    # - sed -i -e 's/  +/+/g' plan.txt
    # - sed -i -e 's/  ~/~/g' plan.txt
    # - sed -i -e 's/  -/-/g' plan.txt
    # - MESSAGE=$(cat plan.txt)
    # - >-
    #   curl -X POST -g -H "PRIVATE-TOKEN: ${GITLAB_ACCESS_TOKEN}" 
    #   --data-urlencode "body=${MESSAGE}" 
    #   "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}/discussions"
  # artifacts:
  #   name: plan
  #   paths:
  #     - plan.tfplan
  only:
    - merge_requests

build:
  stage: plan
  script:
    - terraform plan -out plan.tfplan
  artifacts:
    name: plan
    paths:
      - plan.tfplan
  only:
    - master

apply:
  stage: apply
  script:
    - terraform apply -input=false -auto-approve
  dependencies:
    - build
  when: manual
  only:
    - master